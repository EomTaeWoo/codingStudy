package Chap01;

import java.util.Scanner;

public class Programers_01 {

	public static String solution(String str) {
		String answer = str;
		// 1단계 new_id의 모든 대문자를 대응되는 소문자로 치환합니다.
		answer = answer.toLowerCase();
		//2단계 new_id에서 알파벳 소문자, 숫자, 빼기(-), 밑줄(_), 마침표(.)를 제외한 모든 문자를 제거합니다.
		/*
		String charRemove = "!@#*";
		for(char c : charRemove.toCharArray()) {
			answer = answer.replace(String.valueOf(c),"");
		}
		*/
		answer = answer.replaceAll("[^a-z0-9-_.]","");
		// 3단계 new_id에서 마침표(.)가 2번 이상 연속된 부분을 하나의 마침표(.)로 치환합니다.
		//answer = answer.replace("...", ".").replace("..", ".");
		answer = answer.replaceAll("\\.{2,}", ".");
		// 4단계 new_id에서 마침표(.)가 처음이나 끝에 위치한다면 제거합니다.
		/*
		if(answer.charAt(0) == '.' || answer.charAt(answer.length()-1) == '.') {
			answer = answer.replaceFirst(".", "");
			answer = answer.replaceAll(".$", "");
		}
		*/
		answer = answer.replaceAll("^\\.|\\.$", "");
		// 5단계 new_id가 빈 문자열이라면, new_id에 "a"를 대입합니다.
		//answer = answer.replace(" ", "a");
		if (answer.equals("")) {
            answer = "a";
        }
		//6단계 new_id의 길이가 16자 이상이면, new_id의 첫 15개의 문자를 제외한 나머지 문자들을 모두 제거합니다.
	    //만약 제거 후 마침표(.)가 new_id의 끝에 위치한다면 끝에 위치한 마침표(.) 문자를 제거합니다.
		if(answer.length() >= 16) {
			answer = answer.substring(0,15);
			answer = answer.replaceAll("\\.$", ""); // 마지막 문자가 마침표(.)인 경우 제거
		}
		//if(answer.charAt(answer.length()-1) == '.') {
		//	answer = answer.replaceAll(".$", "");
		//}
		// 7단계 new_id의 길이가 2자 이하라면, new_id의 마지막 문자를 new_id의 길이가 3이 될 때까지 반복해서 끝에 붙입니다.
		//if(answer.length() <= 2) {
		//	answer += answer.charAt(answer.length()-1);
		//}
		while (answer.length() < 3) {
            answer += answer.charAt(answer.length() - 1);
        }
		return answer;
	}
	public static void main(String[] args) {
		Programers_01 T = new Programers_01();
		Scanner sc = new Scanner(System.in);
		String str = sc.nextLine();
		System.out.println(T.solution(str));

	}

}
